AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM Template for a Card Game Application

Resources:
  # Create Game Function
  CreateGameFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/app.handler
      Runtime: nodejs22.x
      MemorySize: 128
      Timeout: 10
      CodeUri: create-game/
      Environment:
        Variables:
          GAME_TABLE: !Ref GameTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref GameTable
      Events:
        CreateGameApi:
          Type: Api
          Properties:
            Path: /create-game
            Method: post

  # Deal Hands Function
  DealHandsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/app.handler
      Runtime: nodejs22.x
      MemorySize: 128
      Timeout: 10
      CodeUri: deal-hands/
      Environment:
        Variables:
          GAME_TABLE: !Ref GameTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref GameTable
      Events:
        DealHandsApi:
          Type: Api
          Properties:
            Path: /games/{gameId}/deal-hands
            Method: post

  # Get Hand Function
  GetHandFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/app.handler
      Runtime: nodejs22.x
      MemorySize: 128
      Timeout: 10
      CodeUri: get-hand/
      Environment:
        Variables:
          GAME_TABLE: !Ref GameTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref GameTable
      Events:
        GetHandApi:
          Type: Api
          Properties:
            Path: /games/{gameId}/players/{player}/hand
            Method: get

  # Get Dealer Function
  GetDealerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/app.handler
      Runtime: nodejs22.x
      MemorySize: 128
      Timeout: 10
      CodeUri: get-dealer/
      Environment:
        Variables:
          GAME_TABLE: !Ref GameTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref GameTable
      Events:
        GetDealerApi:
          Type: Api
          Properties:
            Path: /games/{gameId}/dealer
            Method: get

  # Set Dealer Function
  SetDealerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/app.handler
      Runtime: nodejs22.x
      MemorySize: 128
      Timeout: 10
      CodeUri: set-dealer/
      Environment:
        Variables:
          GAME_TABLE: !Ref GameTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref GameTable
      Events:
        SetDealerApi:
          Type: Api
          Properties:
            Path: /games/{gameId}/dealer/{player}
            Method: post

  # Set Scores Function
  SetScoresFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/app.handler
      Runtime: nodejs22.x
      MemorySize: 128
      Timeout: 10
      CodeUri: set-scores/
      Environment:
        Variables:
          GAME_TABLE: !Ref GameTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref GameTable
      Events:
        SetScoresApi:
          Type: Api
          Properties:
            Path: /games/{gameId}/scores
            Method: post

  # Get Scores Function
  GetScoresFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/app.handler
      Runtime: nodejs22.x
      MemorySize: 128
      Timeout: 10
      CodeUri: get-scores/
      Environment:
        Variables:
          GAME_TABLE: !Ref GameTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref GameTable
      Events:
        GetScoresApi:
          Type: Api
          Properties:
            Path: /games/{gameId}/scores
            Method: get

  # Get Turn Function
  GetTurnFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/app.handler
      Runtime: nodejs22.x
      MemorySize: 128
      Timeout: 10
      CodeUri: get-turn/
      Environment:
        Variables:
          GAME_TABLE: !Ref GameTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref GameTable
      Events:
        GetTurnApi:
          Type: Api
          Properties:
            Path: /games/{gameId}/turn
            Method: get

  # Set Turn Function
  SetTurnFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/app.handler
      Runtime: nodejs22.x
      MemorySize: 128
      Timeout: 10
      CodeUri: set-turn/
      Environment:
        Variables:
          GAME_TABLE: !Ref GameTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref GameTable
      Events:
        SetTurnApi:
          Type: Api
          Properties:
            Path: /games/{gameId}/turn/{player}
            Method: post

  # Set Played Function
  SetPlayedFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/app.handler
      Runtime: nodejs22.x
      MemorySize: 128
      Timeout: 10
      CodeUri: set-played/
      Environment:
        Variables:
          GAME_TABLE: !Ref GameTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref GameTable
      Events:
        SetPlayedApi:
          Type: Api
          Properties:
            Path: /games/{gameId}/played
            Method: post

  # Get Played Function
  GetPlayedFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/app.handler
      Runtime: nodejs22.x
      MemorySize: 128
      Timeout: 10
      CodeUri: get-played/
      Environment:
        Variables:
          GAME_TABLE: !Ref GameTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref GameTable
      Events:
        GetPlayedApi:
          Type: Api
          Properties:
            Path: /games/{gameId}/played
            Method: get

  # Set Bid Function
  SetBidFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/app.handler
      Runtime: nodejs22.x
      MemorySize: 128
      Timeout: 10
      CodeUri: set-bid/
      Environment:
        Variables:
          GAME_TABLE: !Ref GameTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref GameTable
      Events:
        SetBidApi:
          Type: Api
          Properties:
            Path: /games/{gameId}/bid
            Method: post

  # Set Phase Function
  SetPhaseFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/app.handler
      Runtime: nodejs22.x
      MemorySize: 128
      Timeout: 10
      CodeUri: set-phase/
      Environment:
        Variables:
          GAME_TABLE: !Ref GameTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref GameTable
      Events:
        SetBidApi:
          Type: Api
          Properties:
            Path: /games/{gameId}/phase/{phase}
            Method: post

# Get Bid Function
  GetBidFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/app.handler
      Runtime: nodejs22.x
      MemorySize: 128
      Timeout: 10
      CodeUri: get-bid/
      Environment:
        Variables:
          GAME_TABLE: !Ref GameTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref GameTable
      Events:
        SetBidApi:
          Type: Api
          Properties:
            Path: /games/{gameId}/bid
            Method: get
  # Get Phase Function
  GetPhaseFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/app.handler
      Runtime: nodejs22.x
      MemorySize: 128
      Timeout: 10
      CodeUri: set-phase/
      Environment:
        Variables:
          GAME_TABLE: !Ref GameTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref GameTable
      Events:
        SetBidApi:
          Type: Api
          Properties:
            Path: /games/{gameId}/phase
            Method: get
  # DynamoDB Table for Game Data
  GameTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: GameTable
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: gameId
          AttributeType: S
      KeySchema:
        - AttributeName: gameId
          KeyType: HASH
      SSESpecification:
        SSEEnabled: true
      TimeToLiveSpecification:
        AttributeName: ttl # Optional for automatic record expiration
        Enabled: true
      Tags:
        - Key: Project
          Value: CardGameApp
